#TagBegin=
#TagEnd=
#CommentBegin1=
#CommentEnd1=
#LineComment1=//
#CommentBegin2=
#CommentEnd2=
#LineComment2=
#SpecialSyntax=None
#ScriptBegin=
#ScriptEnd=
#QuoteSingle=True
#QuoteDouble=True
#QuoteContinue=False
#EscapeCharacter=

#Word Color=0, WholeWord=True, RightSide=False, RightAll=False, MatchCase=True, InsideTag=False, RegEx=False
Self
abstract
as
async
await
become
box
break
const
continue
create
do
else
enum
extern
false
final
fn
for
if
impl
in
let
loop
macro
match
mod
move
mut
override
priv
pub
ref
return
self
static
struct
super
trait
true
try
type
typeof
unsafe
unsized
use
virtual
where
while
yield

#Word Color=2, WholeWord=False, RightSide=False, RightAll=False, MatchCase=False, InsideTag=False, RegEx=True
\w+!
